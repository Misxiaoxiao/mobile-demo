{"remainingRequest":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/babel-loader/lib/index.js!/Users/zuber/Desktop/document/company/mobile_ts/node_modules/ts-loader/index.js??ref--13-2!/Users/zuber/Desktop/document/company/mobile_ts/src/api/fetch/fetch.ts","dependencies":[{"path":"/Users/zuber/Desktop/document/company/mobile_ts/src/api/fetch/fetch.ts","mtime":1540807717476},{"path":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/cache-loader/dist/cjs.js","mtime":1540785597449},{"path":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport buildSignature from './signature';\nvar BUILD_MODE = String(process.env.BUILD_MODE); // 处理请求的方法\n\nvar buildHandler = function buildHandler(token, handle) {\n  var handler = function handler(res) {\n    switch (res.data.code) {\n      case 0:\n        return res.data.result !== undefined ? res : Promise.reject(res.data.msg);\n\n      case 401:\n        token.clean();\n        window.location.reload();\n        return Promise.reject(res.data.msg);\n\n      default:\n        if (handle) {\n          handle(res);\n        }\n\n        return Promise.reject(res.data);\n    }\n  };\n\n  return {\n    resolve: function resolve(res) {\n      if (res.status === 200) {\n        return handler(res);\n      }\n\n      return Promise.reject(res.data);\n    }\n  };\n}; // 二次封装axios  用来处理token验证\n\n\nvar Fetch = function Fetch(root, token, deployKey, handle) {\n  var signature = buildSignature(token, deployKey);\n  var Root = root[BUILD_MODE] ? root[BUILD_MODE] : root.beta;\n  return function (apiUrl) {\n    var Axios = axios.create({\n      baseURL: Root + apiUrl\n    });\n    Axios.interceptors.request.use(function (config) {\n      config.headers.common.Authorization = signature.generate(apiUrl + config.url, config.method, config.data);\n      return config;\n    }, function (error) {\n      return Promise.reject(error);\n    });\n    var handler = buildHandler(token, handle);\n    Axios.interceptors.response.use(function (res) {\n      return handler.resolve(res);\n    }, function (error) {\n      return Promise.reject(error);\n    });\n    return Axios;\n  };\n};\n\nexport default Fetch;",{"version":3,"sources":["/Users/zuber/Desktop/document/company/mobile_ts/src/api/fetch/fetch.ts"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAyD,OAAzD;AACA,OAAO,cAAP,MAA2B,aAA3B;AACA,IAAM,aAAqB,OAAO,QAAQ,GAAR,CAAY,UAAnB,CAA3B,C,CAEA;;AACA,IAAM,eAAe,SAAf,YAAe,CAAC,KAAD,EAAa,MAAb,EAA4B;AAC/C,MAAM,UAAU,SAAV,OAAU,CAAC,GAAD,EAA4B;AAC1C,YAAQ,IAAI,IAAJ,CAAS,IAAjB;AACE,WAAK,CAAL;AACE,eAAO,IAAI,IAAJ,CAAS,MAAT,KAAoB,SAApB,GAAgC,GAAhC,GAAsC,QAAQ,MAAR,CAAe,IAAI,IAAJ,CAAS,GAAxB,CAA7C;;AACF,WAAK,GAAL;AACE,cAAM,KAAN;AACA,eAAO,QAAP,CAAgB,MAAhB;AACA,eAAO,QAAQ,MAAR,CAAe,IAAI,IAAJ,CAAS,GAAxB,CAAP;;AACF;AACE,YAAI,MAAJ,EAAY;AACV,iBAAO,GAAP;AACD;;AACD,eAAO,QAAQ,MAAR,CAAe,IAAI,IAAnB,CAAP;AAXJ;AAaD,GAdD;;AAgBA,SAAO;AACL,aAAS,iBAAC,GAAD,EAA4B;AACnC,UAAI,IAAI,MAAJ,KAAe,GAAnB,EAAwB;AACtB,eAAO,QAAQ,GAAR,CAAP;AACD;;AACD,aAAO,QAAQ,MAAR,CAAe,IAAI,IAAnB,CAAP;AACD;AANI,GAAP;AAQD,CAzBD,C,CA2BA;;;AACA,IAAM,QAAQ,SAAR,KAAQ,CAAC,IAAD,EAAY,KAAZ,EAAwB,SAAxB,EAAwC,MAAxC,EAAuD;AACnE,MAAM,YAAY,eAAe,KAAf,EAAsB,SAAtB,CAAlB;AACA,MAAM,OAAe,KAAK,UAAL,IAAmB,KAAK,UAAL,CAAnB,GAAsC,KAAK,IAAhE;AACA,SAAO,UAAC,MAAD,EAAmB;AACxB,QAAM,QAAQ,MAAM,MAAN,CAAa;AACzB,eAAS,OAAO;AADS,KAAb,CAAd;AAIA,UAAM,YAAN,CAAmB,OAAnB,CAA2B,GAA3B,CAA+B,UAAC,MAAD,EAA+B;AAC5D,aAAO,OAAP,CAAe,MAAf,CAAsB,aAAtB,GAAsC,UAAU,QAAV,CAAmB,SAAS,OAAO,GAAnC,EAAwC,OAAO,MAA/C,EAAuD,OAAO,IAA9D,CAAtC;AACA,aAAO,MAAP;AACD,KAHD,EAGG,UAAC,KAAD,EAAe;AAChB,aAAO,QAAQ,MAAR,CAAe,KAAf,CAAP;AACD,KALD;AAOA,QAAM,UAAU,aAAa,KAAb,EAAoB,MAApB,CAAhB;AAEA,UAAM,YAAN,CAAmB,QAAnB,CAA4B,GAA5B,CAAgC,UAAC,GAAD,EAA4B;AAC1D,aAAO,QAAQ,OAAR,CAAgB,GAAhB,CAAP;AACD,KAFD,EAEG,UAAC,KAAD,EAAe;AAChB,aAAO,QAAQ,MAAR,CAAe,KAAf,CAAP;AACD,KAJD;AAMA,WAAO,KAAP;AACD,GArBD;AAsBD,CAzBD;;AA2BA,eAAe,KAAf","sourcesContent":["import axios, { AxiosResponse, AxiosRequestConfig } from 'axios';\nimport buildSignature from './signature';\nconst BUILD_MODE: string = String(process.env.BUILD_MODE);\n\n// 处理请求的方法\nconst buildHandler = (token: any, handle: any) => {\n  const handler = (res: AxiosResponse<any>) => {\n    switch (res.data.code) {\n      case 0:\n        return res.data.result !== undefined ? res : Promise.reject(res.data.msg);\n      case 401:\n        token.clean();\n        window.location.reload();\n        return Promise.reject(res.data.msg);\n      default:\n        if (handle) {\n          handle(res);\n        }\n        return Promise.reject(res.data);\n    }\n  };\n\n  return {\n    resolve: (res: AxiosResponse<any>) => {\n      if (res.status === 200) {\n        return handler(res);\n      }\n      return Promise.reject(res.data);\n    },\n  };\n};\n\n// 二次封装axios  用来处理token验证\nconst Fetch = (root: any, token: any, deployKey: any, handle: any) => {\n  const signature = buildSignature(token, deployKey);\n  const Root: string = root[BUILD_MODE] ? root[BUILD_MODE] : root.beta;\n  return (apiUrl: string) => {\n    const Axios = axios.create({\n      baseURL: Root + apiUrl,\n    });\n\n    Axios.interceptors.request.use((config: AxiosRequestConfig) => {\n      config.headers.common.Authorization = signature.generate(apiUrl + config.url, config.method, config.data);\n      return config;\n    }, (error: any) => {\n      return Promise.reject(error);\n    });\n\n    const handler = buildHandler(token, handle);\n\n    Axios.interceptors.response.use((res: AxiosResponse<any>) => {\n      return handler.resolve(res);\n    }, (error: any) => {\n      return Promise.reject(error);\n    });\n\n    return Axios;\n  };\n};\n\nexport default Fetch;\n"],"sourceRoot":""}]}