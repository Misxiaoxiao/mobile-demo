{"remainingRequest":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/babel-loader/lib/index.js!/Users/zuber/Desktop/document/company/mobile_ts/node_modules/ts-loader/index.js??ref--13-2!/Users/zuber/Desktop/document/company/mobile_ts/src/vuex/modules/auth/auth.action.ts","dependencies":[{"path":"/Users/zuber/Desktop/document/company/mobile_ts/src/vuex/modules/auth/auth.action.ts","mtime":1541491077890},{"path":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/cache-loader/dist/cjs.js","mtime":1540785597449},{"path":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import api from './auth.api';\nimport * as types from './auth.types';\nimport { ActionBuilder } from '../../action.common';\nvar getUserAuth = ActionBuilder({\n  method: api.getAuth,\n  actionSuccess: types.GET_USER_AUTH_SUCCESS,\n  actionFail: types.GET_USER_AUTH_FAIL\n});\n\nvar cleanUserAuth = function cleanUserAuth(_ref, success) {\n  var commit = _ref.commit;\n  commit(types.CLEAN_USER_AUTH);\n  if (success) success();\n};\n\nexport default {\n  actions: {\n    getUserAuth: getUserAuth,\n    cleanUserAuth: cleanUserAuth\n  }\n};",{"version":3,"sources":["/Users/zuber/Desktop/document/company/mobile_ts/src/vuex/modules/auth/auth.action.ts"],"names":[],"mappings":"AAAA,OAAO,GAAP,MAAgB,YAAhB;AACA,OAAO,KAAK,KAAZ,MAAuB,cAAvB;AACA,SAAS,aAAT,QAA8B,qBAA9B;AAEA,IAAM,cAAc,cAAc;AAC9B,UAAQ,IAAI,OADkB;AAE9B,iBAAe,MAAM,qBAFS;AAG9B,cAAY,MAAM;AAHY,CAAd,CAApB;;AAMA,IAAM,gBAAgB,SAAhB,aAAgB,OAAgB,OAAhB,EAAiC;AAAA,MAA/B,MAA+B,QAA/B,MAA+B;AACnD,SAAO,MAAM,eAAb;AACA,MAAI,OAAJ,EAAa;AAChB,CAHD;;AAKA,eAAe;AACX,WAAS;AACL,4BADK;AAEL;AAFK;AADE,CAAf","sourcesContent":["import api from './auth.api'\nimport * as types from './auth.types'\nimport { ActionBuilder } from '../../action.common'\n\nconst getUserAuth = ActionBuilder({\n    method: api.getAuth,\n    actionSuccess: types.GET_USER_AUTH_SUCCESS,\n    actionFail: types.GET_USER_AUTH_FAIL\n})\n\nconst cleanUserAuth = ({commit}: any, success?: any) => {\n    commit(types.CLEAN_USER_AUTH)\n    if (success) success()\n}\n\nexport default {\n    actions: {\n        getUserAuth,\n        cleanUserAuth\n    }\n}"],"sourceRoot":""}]}