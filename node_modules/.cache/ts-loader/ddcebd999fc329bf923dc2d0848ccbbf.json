{"remainingRequest":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/babel-loader/lib/index.js!/Users/zuber/Desktop/document/company/mobile_ts/node_modules/ts-loader/index.js??ref--13-2!/Users/zuber/Desktop/document/company/mobile_ts/src/vuex/modules/locate/locate.store.ts","dependencies":[{"path":"/Users/zuber/Desktop/document/company/mobile_ts/src/vuex/modules/locate/locate.store.ts","mtime":1541491077893},{"path":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/cache-loader/dist/cjs.js","mtime":1540785597449},{"path":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _classCallCheck from \"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/@babel/runtime/helpers/builtin/es6/classCallCheck\";\n\nvar _mutations;\n\nimport { SEARCHING_SUGGESTED_ADDRESSES, SEARCHING_SUGGESTED_ADDRESSES_SUCCESS, SEARCHING_SUGGESTED_ADDRESSES_FAIL, LOCATING_CURRENT_CITY, LOCATING_CURRENT_CITY_SUCCESS, LOCATING_CURRENT_CITY_FAIL, LOCATING_CURRENT_POSITION, LOCATING_CURRENT_POSITION_SUCCESS, LOCATING_CURRENT_POSITION_ERROR } from './locate.types';\nimport { token } from '@/vuex/api.config';\nexport var LocateState = function LocateState() {\n  _classCallCheck(this, LocateState);\n\n  this.querying = false;\n  this.addresses = [];\n  this.locating = false;\n  this.current_city = token.getValue('city') ? token.getValue('city') : '上海';\n  this.locate_address = {};\n};\nvar mutations = (_mutations = {}, _defineProperty(_mutations, SEARCHING_SUGGESTED_ADDRESSES, function (state) {\n  state.querying = true;\n}), _defineProperty(_mutations, SEARCHING_SUGGESTED_ADDRESSES_SUCCESS, function (state, action) {\n  state.addresses = action.result;\n  state.querying = false;\n}), _defineProperty(_mutations, SEARCHING_SUGGESTED_ADDRESSES_FAIL, function (state) {\n  state.addresses = [];\n  state.querying = false;\n}), _defineProperty(_mutations, LOCATING_CURRENT_CITY, function (state) {\n  state.locating = true;\n}), _defineProperty(_mutations, LOCATING_CURRENT_CITY_SUCCESS, function (state, action) {\n  var _city = action.city.replace('市', '');\n\n  state.current_city = _city !== '全国' ? _city : '上海';\n  token.setValue('city', state.current_city);\n  state.locating = false;\n}), _defineProperty(_mutations, LOCATING_CURRENT_CITY_FAIL, function (state) {\n  state.locating = false;\n}), _defineProperty(_mutations, LOCATING_CURRENT_POSITION, function (state) {\n  state.locating = true;\n}), _defineProperty(_mutations, LOCATING_CURRENT_POSITION_SUCCESS, function (state, action) {\n  state.locating = false;\n  state.locate_address = action.location;\n}), _defineProperty(_mutations, LOCATING_CURRENT_POSITION_ERROR, function (state) {\n  state.locating = false;\n  state.locate_address = {};\n}), _mutations);\nexport default {\n  state: new LocateState(),\n  mutations: mutations\n};",{"version":3,"sources":["/Users/zuber/Desktop/document/company/mobile_ts/src/vuex/modules/locate/locate.store.ts"],"names":[],"mappings":";;;;;;AAAA,SACI,6BADJ,EAEI,qCAFJ,EAGI,kCAHJ,EAII,qBAJJ,EAKI,6BALJ,EAMI,0BANJ,EAOI,yBAPJ,EAQI,iCARJ,EASI,+BATJ,QAUO,gBAVP;AAaA,SAAQ,KAAR,QAAoB,mBAApB;AAEA,WAAa,WAAb,GAAA,uBAAA;AAAA;;AACI,OAAA,QAAA,GAAoB,KAApB;AACA,OAAA,SAAA,GAAwB,EAAxB;AACA,OAAA,QAAA,GAAoB,KAApB;AACA,OAAA,YAAA,GAAuB,MAAM,QAAN,CAAe,MAAf,IAAyB,MAAM,QAAN,CAAe,MAAf,CAAzB,GAAkD,IAAzE;AACA,OAAA,cAAA,GAAsB,EAAtB;AACH,CAND;AAQA,IAAM,0DACD,6BADC,YAC+B,KAD/B,EACiD;AAC/C,QAAM,QAAN,GAAiB,IAAjB;AACH,CAHC,+BAID,qCAJC,YAIuC,KAJvC,EAI2D,MAJ3D,EAIsE;AACpE,QAAM,SAAN,GAAkB,OAAO,MAAzB;AACA,QAAM,QAAN,GAAiB,KAAjB;AACH,CAPC,+BAQD,kCARC,YAQoC,KARpC,EAQsD;AACpD,QAAM,SAAN,GAAkB,EAAlB;AACA,QAAM,QAAN,GAAiB,KAAjB;AACH,CAXC,+BAYD,qBAZC,YAYuB,KAZvB,EAYyC;AACvC,QAAM,QAAN,GAAiB,IAAjB;AACH,CAdC,+BAeD,6BAfC,YAe+B,KAf/B,EAemD,MAfnD,EAe8D;AAC5D,MAAI,QAAQ,OAAO,IAAP,CAAY,OAAZ,CAAoB,GAApB,EAAyB,EAAzB,CAAZ;;AACA,QAAM,YAAN,GAAqB,UAAU,IAAV,GAAiB,KAAjB,GAAyB,IAA9C;AACA,QAAM,QAAN,CAAe,MAAf,EAAuB,MAAM,YAA7B;AACA,QAAM,QAAN,GAAiB,KAAjB;AACH,CApBC,+BAqBD,0BArBC,YAqB4B,KArB5B,EAqB8C;AAC5C,QAAM,QAAN,GAAiB,KAAjB;AACH,CAvBC,+BAwBD,yBAxBC,YAwB2B,KAxB3B,EAwB6C;AAC3C,QAAM,QAAN,GAAiB,IAAjB;AACH,CA1BC,+BA2BD,iCA3BC,YA2BmC,KA3BnC,EA2BuD,MA3BvD,EA2BkE;AAChE,QAAM,QAAN,GAAiB,KAAjB;AACA,QAAM,cAAN,GAAuB,OAAO,QAA9B;AACH,CA9BC,+BA+BD,+BA/BC,YA+BiC,KA/BjC,EA+BmD;AACjD,QAAM,QAAN,GAAiB,KAAjB;AACA,QAAM,cAAN,GAAuB,EAAvB;AACH,CAlCC,cAAN;AAqCA,eAAe;AACX,SAAO,IAAI,WAAJ,EADI;AAEX;AAFW,CAAf","sourcesContent":["import {\n    SEARCHING_SUGGESTED_ADDRESSES,\n    SEARCHING_SUGGESTED_ADDRESSES_SUCCESS,\n    SEARCHING_SUGGESTED_ADDRESSES_FAIL,\n    LOCATING_CURRENT_CITY,\n    LOCATING_CURRENT_CITY_SUCCESS,\n    LOCATING_CURRENT_CITY_FAIL,\n    LOCATING_CURRENT_POSITION,\n    LOCATING_CURRENT_POSITION_SUCCESS,\n    LOCATING_CURRENT_POSITION_ERROR\n} from './locate.types'\n\nimport { Location } from './locate.model'\nimport {token} from '@/vuex/api.config'\n\nexport class LocateState {\n    querying: boolean = false\n    addresses: Location[] = []\n    locating: boolean = false\n    current_city: string = token.getValue('city') ? token.getValue('city') : '上海'\n    locate_address: any = {}\n}\n\nconst mutations = {\n    [SEARCHING_SUGGESTED_ADDRESSES] (state: LocateState) {\n        state.querying = true\n    },\n    [SEARCHING_SUGGESTED_ADDRESSES_SUCCESS] (state: LocateState, action: any) {\n        state.addresses = action.result\n        state.querying = false\n    },\n    [SEARCHING_SUGGESTED_ADDRESSES_FAIL] (state: LocateState) {\n        state.addresses = []\n        state.querying = false\n    },\n    [LOCATING_CURRENT_CITY] (state: LocateState) {\n        state.locating = true\n    },\n    [LOCATING_CURRENT_CITY_SUCCESS] (state: LocateState, action: any) {\n        let _city = action.city.replace('市', '')\n        state.current_city = _city !== '全国' ? _city : '上海'\n        token.setValue('city', state.current_city)\n        state.locating = false\n    },\n    [LOCATING_CURRENT_CITY_FAIL] (state: LocateState) {\n        state.locating = false\n    },\n    [LOCATING_CURRENT_POSITION] (state: LocateState) {\n        state.locating = true\n    },\n    [LOCATING_CURRENT_POSITION_SUCCESS] (state: LocateState, action: any) {\n        state.locating = false\n        state.locate_address = action.location\n    },\n    [LOCATING_CURRENT_POSITION_ERROR] (state: LocateState) {\n        state.locating = false\n        state.locate_address = {}\n    }\n}\n\nexport default {\n    state: new LocateState(),\n    mutations\n}\n"],"sourceRoot":""}]}