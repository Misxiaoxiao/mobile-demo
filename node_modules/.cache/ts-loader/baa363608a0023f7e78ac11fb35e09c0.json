{"remainingRequest":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/babel-loader/lib/index.js!/Users/zuber/Desktop/document/company/mobile_ts/node_modules/ts-loader/index.js??ref--13-2!/Users/zuber/Desktop/document/company/mobile_ts/src/api/fetch/signature.ts","dependencies":[{"path":"/Users/zuber/Desktop/document/company/mobile_ts/src/api/fetch/signature.ts","mtime":1540807745511},{"path":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/cache-loader/dist/cjs.js","mtime":1540785597449},{"path":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport md5 from 'blueimp-md5';\n\nvar buildSignature = function buildSignature(token, deployKey) {\n  var timeStamp = function timeStamp() {\n    return Math.round(new Date().getTime() / 1000);\n  };\n\n  var generate = function generate(apiUrl, method, param) {\n    var isLogin = token.get('token') === '' && token.get('secret') === '' ? false : true;\n    var timestamp = timeStamp().toString();\n    var oauth2 = token.get('token') ? token.get('token') : md5(timestamp);\n    var developkey = deployKey;\n    var secret = token.get('secret') ? token.get('secret') : md5(timestamp);\n    method = method ? method.toLowerCase() : 'get';\n    param = method === 'get' || method === 'delete' ? '{}' : JSON.stringify(param);\n    var source = \"request_url=\".concat(apiUrl, \"&content=\").concat(param, \"&request_method=\").concat(method, \"&timestamp=\").concat(timestamp, \"&sercet=\").concat(secret); // tslint:disable-line\n\n    var signature = md5(source);\n    var auth = isLogin ? \"timestamp=\".concat(timestamp, \";oauth2=\").concat(oauth2, \";signature=\").concat(signature, \";developkey=\").concat(developkey) // tslint:disable-line\n    : \"timestamp=\".concat(timestamp, \";oauth2=\").concat(oauth2, \";signature=\").concat(signature, \";secret=\").concat(secret, \";developkey=\").concat(developkey); // tslint:disable-line\n\n    return auth; // timestamp=1234567890; oauth2=this'stokenfromserver; signature=md5string; developkey=abcdefg\n    // timestamp=1234567890; oauth2=clienttoken; signature=md5string; secret=clientsecret; developkey=abcdefg\n  };\n\n  var socket = function socket() {\n    // token=signature=e9932762a2661ea6a812269585442d21;oauth2=abcedft;timestamp=1520999224\n    var timestamp = timeStamp().toString();\n    var oauth2 = token.get('token') ? token.get('token') : md5(timestamp);\n    var signature = md5(oauth2 + timestamp);\n    return \"timestamp=\".concat(timestamp, \";oauth2=\").concat(oauth2, \";signature=\").concat(signature);\n  };\n\n  return {\n    generate: generate,\n    socket: socket\n  };\n};\n\nexport default buildSignature;",{"version":3,"sources":["/Users/zuber/Desktop/document/company/mobile_ts/src/api/fetch/signature.ts"],"names":[],"mappings":";AAAA,OAAO,GAAP,MAAgB,aAAhB;;AAEA,IAAM,iBAAiB,SAAjB,cAAiB,CAAC,KAAD,EAAa,SAAb,EAA+B;AACpD,MAAM,YAAY,SAAZ,SAAY;AAAA,WAAM,KAAK,KAAL,CAAW,IAAI,IAAJ,GAAW,OAAX,KAAuB,IAAlC,CAAN;AAAA,GAAlB;;AAEA,MAAM,WAAW,SAAX,QAAW,CAAC,MAAD,EAAiB,MAAjB,EAA6C,KAA7C,EAA2D;AAC1E,QAAM,UAAmB,MAAM,GAAN,CAAU,OAAV,MAAuB,EAAvB,IAA6B,MAAM,GAAN,CAAU,QAAV,MAAwB,EAArD,GAA0D,KAA1D,GAAkE,IAA3F;AACA,QAAM,YAAoB,YAAY,QAAZ,EAA1B;AACA,QAAM,SAAiB,MAAM,GAAN,CAAU,OAAV,IAAqB,MAAM,GAAN,CAAU,OAAV,CAArB,GAA0C,IAAI,SAAJ,CAAjE;AACA,QAAM,aAAqB,SAA3B;AACA,QAAM,SAAc,MAAM,GAAN,CAAU,QAAV,IAAsB,MAAM,GAAN,CAAU,QAAV,CAAtB,GAA4C,IAAI,SAAJ,CAAhE;AACA,aAAS,SAAS,OAAO,WAAP,EAAT,GAAgC,KAAzC;AACA,YAAS,WAAW,KAAX,IAAoB,WAAW,QAAhC,GAA4C,IAA5C,GAAmD,KAAK,SAAL,CAAe,KAAf,CAA3D;AACA,QAAM,+BAAgC,MAAhC,sBAAkD,KAAlD,6BAA0E,MAA1E,wBAA8F,SAA9F,qBAAkH,MAAlH,CAAN,CAR0E,CAQuD;;AACjI,QAAM,YAAoB,IAAI,MAAJ,CAA1B;AACA,QAAM,OAAe,8BAAuB,SAAvB,qBAA2C,MAA3C,wBAA+D,SAA/D,yBAAuF,UAAvF,EAAmG;AAAnG,0BACuB,SADvB,qBAC2C,MAD3C,wBAC+D,SAD/D,qBACmF,MADnF,yBACwG,UADxG,CAArB,CAV0E,CAWgE;;AAC1I,WAAO,IAAP,CAZ0E,CAa1E;AACA;AACD,GAfD;;AAiBA,MAAM,SAAS,SAAT,MAAS,GAAK;AAClB;AACA,QAAM,YAAY,YAAY,QAAZ,EAAlB;AACA,QAAM,SAAS,MAAM,GAAN,CAAU,OAAV,IAAqB,MAAM,GAAN,CAAU,OAAV,CAArB,GAA0C,IAAI,SAAJ,CAAzD;AACA,QAAM,YAAY,IAAI,SAAS,SAAb,CAAlB;AACA,+BAAoB,SAApB,qBAAwC,MAAxC,wBAA4D,SAA5D;AACD,GAND;;AAQA,SAAO;AACL,sBADK;AAEL;AAFK,GAAP;AAID,CAhCD;;AAkCA,eAAe,cAAf","sourcesContent":["import md5 from 'blueimp-md5';\n\nconst buildSignature = (token: any, deployKey: any) => {\n  const timeStamp = () => Math.round(new Date().getTime() / 1000);\n\n  const generate = (apiUrl: string, method: string | undefined, param: any) => {\n    const isLogin: boolean = token.get('token') === '' && token.get('secret') === '' ? false : true;\n    const timestamp: string = timeStamp().toString();\n    const oauth2: string = token.get('token') ? token.get('token') : md5(timestamp);\n    const developkey: string = deployKey;\n    const secret: any = token.get('secret') ? token.get('secret') : md5(timestamp);\n    method = method ? method.toLowerCase() : 'get';\n    param = (method === 'get' || method === 'delete') ? '{}' : JSON.stringify(param);\n    const source: string = `request_url=${apiUrl}&content=${param}&request_method=${method}&timestamp=${timestamp}&sercet=${secret}`;// tslint:disable-line\n    const signature: string = md5(source);\n    const auth: string = isLogin ? `timestamp=${timestamp};oauth2=${oauth2};signature=${signature};developkey=${developkey}`// tslint:disable-line\n                                 : `timestamp=${timestamp};oauth2=${oauth2};signature=${signature};secret=${secret};developkey=${developkey}`;// tslint:disable-line\n    return auth;\n    // timestamp=1234567890; oauth2=this'stokenfromserver; signature=md5string; developkey=abcdefg\n    // timestamp=1234567890; oauth2=clienttoken; signature=md5string; secret=clientsecret; developkey=abcdefg\n  };\n\n  const socket = () => {\n    // token=signature=e9932762a2661ea6a812269585442d21;oauth2=abcedft;timestamp=1520999224\n    const timestamp = timeStamp().toString();\n    const oauth2 = token.get('token') ? token.get('token') : md5(timestamp);\n    const signature = md5(oauth2 + timestamp);\n    return `timestamp=${timestamp};oauth2=${oauth2};signature=${signature}`;\n  };\n\n  return {\n    generate,\n    socket,\n  };\n};\n\nexport default buildSignature;\n"],"sourceRoot":""}]}