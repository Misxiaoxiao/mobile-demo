{"remainingRequest":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/babel-loader/lib/index.js!/Users/zuber/Desktop/document/company/mobile_ts/node_modules/ts-loader/index.js??ref--13-2!/Users/zuber/Desktop/document/company/mobile_ts/src/api/fetch/token.ts","dependencies":[{"path":"/Users/zuber/Desktop/document/company/mobile_ts/src/api/fetch/token.ts","mtime":1540807929046},{"path":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/cache-loader/dist/cjs.js","mtime":1540785597449},{"path":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zuber/Desktop/document/company/mobile_ts/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import buildStorage from '@/utils/localstorage';\n\nvar buildToken = function buildToken(prefix) {\n  var Prefix = prefix !== undefined ? prefix : '';\n  var localstorage = buildStorage(Prefix);\n  return {\n    get: function get(key) {\n      switch (key) {\n        case 'api':\n          var Uid = localstorage.get('uid');\n          return Uid ? \"\".concat(Uid, \"/\") : '';\n\n        default:\n          return localstorage.get(key) ? localstorage.get(key) : '';\n      }\n    },\n    set: function set(uid, token, secret) {\n      localstorage.set('uid', uid);\n      localstorage.set('token', token);\n      localstorage.set('secret', secret);\n    },\n    clean: function clean() {\n      localstorage.remove('uid');\n      localstorage.remove('token');\n      localstorage.remove('secret');\n    }\n  };\n};\n\nexport default buildToken;",{"version":3,"sources":["/Users/zuber/Desktop/document/company/mobile_ts/src/api/fetch/token.ts"],"names":[],"mappings":"AAAA,OAAO,YAAP,MAAyB,sBAAzB;;AAEA,IAAM,aAAa,SAAb,UAAa,CAAC,MAAD,EAAiB;AAClC,MAAM,SAAiB,WAAW,SAAX,GAAuB,MAAvB,GAAgC,EAAvD;AACA,MAAM,eAAe,aAAa,MAAb,CAArB;AAEA,SAAO;AACL,SAAK,aAAC,GAAD,EAAgB;AACnB,cAAQ,GAAR;AACE,aAAK,KAAL;AACE,cAAM,MAAM,aAAa,GAAb,CAAiB,KAAjB,CAAZ;AACA,iBAAO,gBAAS,GAAT,SAAkB,EAAzB;;AACF;AACE,iBAAO,aAAa,GAAb,CAAiB,GAAjB,IAAwB,aAAa,GAAb,CAAiB,GAAjB,CAAxB,GAAgD,EAAvD;AALJ;AAOD,KATI;AAUL,SAAK,aAAC,GAAD,EAAc,KAAd,EAA6B,MAA7B,EAA+C;AAClD,mBAAa,GAAb,CAAiB,KAAjB,EAAwB,GAAxB;AACA,mBAAa,GAAb,CAAiB,OAAjB,EAA0B,KAA1B;AACA,mBAAa,GAAb,CAAiB,QAAjB,EAA2B,MAA3B;AACD,KAdI;AAeL,WAAO,iBAAK;AACV,mBAAa,MAAb,CAAoB,KAApB;AACA,mBAAa,MAAb,CAAoB,OAApB;AACA,mBAAa,MAAb,CAAoB,QAApB;AACD;AAnBI,GAAP;AAqBD,CAzBD;;AA2BA,eAAe,UAAf","sourcesContent":["import buildStorage from '@/utils/localstorage';\n\nconst buildToken = (prefix?: any) => {\n  const Prefix: string = prefix !== undefined ? prefix : '';\n  const localstorage = buildStorage(Prefix);\n\n  return {\n    get: (key: string) => {\n      switch (key) {\n        case 'api':\n          const Uid = localstorage.get('uid');\n          return Uid ? `${Uid}/` : '';\n        default:\n          return localstorage.get(key) ? localstorage.get(key) : '';\n      }\n    },\n    set: (uid: string, token: string, secret: string) => {\n      localstorage.set('uid', uid);\n      localstorage.set('token', token);\n      localstorage.set('secret', secret);\n    },\n    clean: () => {\n      localstorage.remove('uid');\n      localstorage.remove('token');\n      localstorage.remove('secret');\n    },\n  };\n};\n\nexport default buildToken;\n"],"sourceRoot":""}]}