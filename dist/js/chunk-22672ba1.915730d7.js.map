{"version":3,"sources":["webpack:///./src/components/common/company_img.vue?2f65","webpack:///./src/components/common/swiper.vue?fde5","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///./src/components/common/swiper.vue?ae3e","webpack:///./src/components/common/swiper.vue?5211","webpack:///./src/components/common/swiper.vue","webpack:///./src/components/common/company_img.vue?9a62","webpack:///./src/components/common/company_img.vue?6fa2","webpack:///./src/components/common/company_img.vue?3007","webpack:///./src/components/common/company_img.vue","webpack:///./src/components/common/swiper.vue?5d5c"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_company_img_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_company_img_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0___default","n","swipervue_type_template_id_614a752a_lang_html_render","_vm","this","_h","$createElement","_c","_self","staticClass","_l","i","key","_t","staticRenderFns","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","dom7_modular_outerWidth","includeMargins","styles","offsetWidth","parseFloat","dom7_modular_outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","dom7_modular_html","dom7_modular_text","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","dom7_modular_index","child","previousSibling","eq","index","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","dom7_modular_parent","parentNode","parent","closest","find","foundElements","found","removeChild","toAdd","fn","prototype","Class","Methods","outerWidth","outerHeight","Object","keys","forEach","methodName","Utils","obj","object","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","isObject","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","eventHandler","index$$1","data$$1","Array","isArray","slice","eventsArray","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","isVisible","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","update","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","x","y","z","newProgress","previousTranslate","swiper_esm_bundle_translate","transitionStart","runCallbacks","direction","autoHeight","dir","transitionEnd$1","animating","transition$1","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","nextSnap","slidesPerViewDynamic","slideToIndex","nextTick","swiper_esm_bundle_slide","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","grabCursor","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","manipulation","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","swiper_esm_bundle_onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","onClick","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_events","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","needsReLoop","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_breakpoints","swiper_esm_bundle_Browser","isSafari","isIE","isEdge","isUiWebView","test","addClasses","classNames","suffixes","suffix","containerModifierClass","removeClasses","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","swiper_esm_bundle_images","wasLocked","navigation","checkOverflow$1","defaults","init","uniqueNavElements","wrapperClass","runCallbacksOnInit","prototypes","images","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","isEventSupported","isSupported","element","implementation","hasFeature","Mousewheel","lastScrollTime","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Navigation$1","hideOnClick","hiddenClass","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","number","render","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Scrollbar$1","Parallax","p","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Zoom$1","onTransitionEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","Controller$1","a11y","role","label","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","disableEl","enableEl","bulletEl","$bulletEl","makeElFocusable","addElRole","addElLabel","paginationBulletMessage","onEnterKey","A11y","notificationClass","updateNavigation","updatePagination","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","slideHistory","History$1","setHistory","HashNavigation","newHash","activeSlideHash","slideHash","watchState","onHashCange","HashNavigation$1","setHash","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","Autoplay$1","disableOnInteraction","pause","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","ws","perspectiveOrigin","EffectCoverflow","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","Thumbs$1","swiper_esm_bundle","swipervue_type_script_lang_ts_MySwiper","_Vue","MySwiper","_this","classCallCheck","mySwiper","createClass","inherits","vue_property_decorator","tslib_es6","default","swipervue_type_script_lang_ts_","common_swipervue_type_script_lang_ts_","component","componentNormalizer","__file","__webpack_exports__","info","logo","alt","_v","_s","_m","company_imgvue_type_script_lang_ts_ConpanyImg","ConpanyImg","possibleConstructorReturn","getPrototypeOf","company_imgvue_type_script_lang_ts_","common_company_imgvue_type_script_lang_ts_","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_swiper_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_swiper_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/chunk-22672ba1.915730d7.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./company_img.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./company_img.vue?vue&type=style&index=0&lang=less&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my_swiper\"},[_c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.slotArr),function(n,i){return _c('div',{key:i,staticClass:\"swiper-slide\"},[_vm._t(n)],2)}))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.2\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: September 13, 2018\n */\nimport { window, document } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.4.2\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: November 1, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          slideSize = parseFloat(slideStyles.getPropertyValue('width'))\n            + parseFloat(slideStyles.getPropertyValue('margin-left'))\n            + parseFloat(slideStyles.getPropertyValue('margin-right'));\n        } else {\n          slideSize = parseFloat(slideStyles.getPropertyValue('height'))\n            + parseFloat(slideStyles.getPropertyValue('margin-top'))\n            + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data$$1.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data$$1.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data$$1.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Prop } from 'vue-property-decorator';\nimport Swiper from 'swiper';\nimport 'swiper/dist/css/swiper.min.css';\n\n@Component\nexport default class MySwiper extends Vue {\n  @Prop({default: []}) private slotArr!: any[];\n  @Prop({default: 1.5}) private slidesPerView!: number;\n\n  private mySwiper: any = null;\n  private mounted(): void {\n    this.mySwiper = new Swiper('.swiper-container', {\n      slidesPerView : this.slidesPerView,\n      slidesOffsetBefore : 15,\n      slidesOffsetAfter : 15,\n    });\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./swiper.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./swiper.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./swiper.vue?vue&type=template&id=614a752a&lang=html&\"\nimport script from \"./swiper.vue?vue&type=script&lang=ts&\"\nexport * from \"./swiper.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./swiper.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"swiper.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"company_img_wrap\"},[_c('div',[_c('div',{staticClass:\"company_wrap_left\"},[_c('div',{staticClass:\"company_img\"},[_c('img',{attrs:{\"src\":_vm.info.logo.src,\"alt\":\"\"}})]),_c('div',{staticClass:\"company_username\"},[_vm._v(_vm._s(_vm.info.name))])]),_vm._m(0)]),_vm._t(\"companyDetail\")],2)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"company_wrap_right\"},[_vm._v(\"\\n      查看全部房源 \"),_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")])])}]\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue, Component, Prop } from 'vue-property-decorator';\n\n@Component\nexport default class ConpanyImg extends Vue {\n  @Prop({default: {}}) private info!: any;\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./company_img.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./company_img.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./company_img.vue?vue&type=template&id=4e1a3992&\"\nimport script from \"./company_img.vue?vue&type=script&lang=ts&\"\nexport * from \"./company_img.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./company_img.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"company_img.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./swiper.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./swiper.vue?vue&type=style&index=0&lang=less&\""],"sourceRoot":""}